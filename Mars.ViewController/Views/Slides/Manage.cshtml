@using System.Web.Optimization
@using SolarSystem.Mars.ViewController.Resources

@model SolarSystem.Mars.ViewController.ViewModels.Concrete.SlideViewModel

@{
    ViewBag.Title = Model.Id == 0 ? PagesTitlesRessources.Slide_Create : PagesTitlesRessources.Slide_Edit;
    Layout = "~/Views/Shared/_LayoutConnected.cshtml";
}

<ol class="breadcrumb">
    <li>@Html.ActionLink(PagesTitlesRessources.Home, "Index", "Home")</li>
    <li>@Html.ActionLink(PagesTitlesRessources.Slides, "Index")</li>
    <li class="active">@ViewBag.Title</li>
</ol>

@using (Html.BeginForm("Manage", "Slides", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, ErrorRessources.ValidationErrorMessage, new { @class = "container alert alert-danger" })

    <fieldset class="col-md-10 col-md-offset-1 form-horizontal">
        <legend>@ContentRessources.SlidesInformations</legend>

        @* Name *@
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "col-sm-2 control-label" })

            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control", @placeholder = ContentRessources.SlidesName })
                @Html.ValidationMessageFor(model => model.Name, null, new { @style = "color: red" })
            </div>
        </div>
        
        @* Image *@
        <div class="form-group">
            @Html.LabelFor(model => model.ImageRemoteUrl, new { @class = "col-sm-2 control-label" })

            <div class="col-sm-8">
                <span class="help-block">@ContentRessources.RemoteImage</span>
                @Html.TextBoxFor(model => model.ImageRemoteUrl, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-8 col-sm-offset-2">
                <span class="help-block">@ContentRessources.LocalImage</span>
                <input type="file" name="file" class="btn btn-default" />
                @Html.ValidationMessageFor(model => model.ImageRemoteUrl, null, new { @style = "color: red", @placeholder = ContentRessources.RemoteImage })
            </div>
        </div>

        @* Permalink *@
        <div class="form-group">
            @Html.LabelFor(model => model.Url, new { @class = "col-sm-2 control-label" })

            <div class="col-sm-10">
                @Html.TextBoxFor(model => model.Url, new { @class = "form-control", @placeholder = ContentRessources.URL })
                @Html.ValidationMessageFor(model => model.Url, null, new { @style = "color: red" })
            </div>
        </div>

        <br />
    </fieldset>

    <fieldset class="col-md-10 col-md-offset-1">
        <legend>@ContentRessources.SlidesContent</legend>

        @* Text *@
        <div class="form-group">
            @Html.TextAreaFor(model => model.Presentation, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Presentation, null, new { @style = "color: red" })
        </div>
    </fieldset>

    @* Is published ? *@
    <div class="form-group col-md-4 col-md-offset-4">
        <div class="checkbox">
            @Html.CheckBoxFor(model => model.IsPublished)
            @Html.LabelFor(model => model.IsPublished)
        </div>
    </div>

    @* Valid button *@
    <p class="col-md-5 col-md-offset-3">
        <button type="submit" class="btn btn-primary">@ContentRessources.Valid</button>
        @Html.ActionLink(ContentRessources.Back, "Index", null, new { @class = "btn btn-default" })
    </p>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/jqueryui")
}